@page "/basic"

<h3>BasicBlazorExample</h3>

<div>
    <button @onclick=CompileAndRun>Run</button>
</div>
<div>
    <textarea style="width: 100%; min-height: 400px;" @bind-value="_textArea" @bind-value:event="oninput"></textarea>
</div>
@if (_compiledType != null)
{
    <DynamicComponent Type="@_compiledType"></DynamicComponent>
}
else if (_busy && _compileLog.Count == 0)
{
    <span style="padding: 4px;">Compiling...</span>
}
else if (_compileLog.Count > 0)
{
    <pre style="padding: 4px;">
        @string.Join("\r\n", _compileLog)
    </pre>
}
else
{
    <div>Click `Run` to compile the code in the text area.</div>
}

@code {
    [Inject]
    CompilationService _compilationService { get; set; } = default!;

    Type? _compiledType = null;
    List<string> _compileLog = new List<string>();
    bool _busy = false;
    string _textArea = @"<div>Hello World! It is @DateTime.Now.ToString(""s"")</div>";

    async Task CompileAndRun()
    {
        _compiledType = null;
        if (_busy) return;
        _compileLog.Clear();
        try
        {
            _busy = true;
            StateHasChanged();
            _compiledType = await _compilationService.CompileRazorCodeToBlazorComponentType(_textArea, async msg =>
            {
                _compileLog.Add(msg);
                StateHasChanged();
                await Task.Delay(100);
            });
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
            Console.WriteLine(ex.StackTrace);
        }
        finally
        {
            _busy = false;
        }
        StateHasChanged();
    }
}